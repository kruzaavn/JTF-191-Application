version: '3.8'

services:
  redis:
    restart: always
    image: redis:latest
    expose:
      - "6379"
    volumes:
      - redisdata:/var/lib/redis/data/

  db:
    restart: always
    image: postgres:12.4
    expose:
      - "5432"
    environment:
      POSTGRES_DB: 'database'
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: 'my-secret-pw'
    volumes:
      - dbdata:/var/lib/postgresql/data/

  gci-relay:
    restart: always
    build: ./gci-relay
    ports:
      - "7224:7224"
    environment:
      DEV: 1
      API_SERVER_USER: test_bot
      API_SERVER_PASSWORD: admin4root
      PORT: 7224
    depends_on:
      - api-server
    command: python -u serve.py

  api-relay:
    restart: always
    build: ./api-relay
    ports:
      - "7225:7225"
    environment:
      DEV: 1
      API_SERVER_USER: test_bot
      API_SERVER_PASSWORD: admin4root
      PORT: 7225
    depends_on:
      - api-server
    command: python -u serve.py

  api-server:
    restart: always
    build: ./api-server
    ports:
      - "8000:8000"
    links:
      - db:db
    depends_on:
      - db
      - redis
    environment:
      - AZURE_STORAGE_ACCOUNT_NAME
      - AZURE_STORAGE_KEY
    volumes:
      - ./api-server/src:/server
    command: python manage.py runserver 0.0.0.0:8000

  rq-worker:
    restart: always
    build: ./rq-worker
    command: rq worker -u redis://redis:6379 high_priority low_priority --path /worker
    depends_on:
      - redis
    links:
      - redis
    environment:
      - AZURE_STORAGE_ACCOUNT_NAME
      - AZURE_STORAGE_KEY
    volumes:
      - ./rq-worker:/usr/src/workers

  rq-dashboard:
    build: ./rq-dashboard
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://redis:6379
    ports:
        - '9181:9181'
    expose:
        - "9181"
    links:
        - redis
    depends_on:
        - redis

volumes:
  dbdata:
  redisdata:
